/*! showdown-youtube 29-11-2016 */
(function (extension) {
	'use strict';
  
	if (typeof showdown !== 'undefined') {
	  extension(showdown);
	} else if (typeof define === 'function' && define.amd) {
	  define(['showdown'], extension);
	} else if (typeof exports === 'object') {
	  module.exports = extension(require('showdown'));
	} else {
	  throw Error('Could not find showdown library');
	}
  
  }(function (showdown) {
	'use strict';
  
	var iframe = '<div class="youtube"><iframe src="%1" width="%2" height="%3" frameborder="0" allowfullscreen></iframe></div>';
	var imgRegex = /(?:<p>)?<img.*?src="(.+?)".*?alt="(.+?)"(.*?)\/?>(?:<\/p>)?/gi;
  
	function parseDimensions(rest, options) {
	  var width,
		height,
		d,
		defaultWidth,
		defaultHeight;
  
	  defaultWidth = options.youtubeWidth ? options.youtubeWidth : 560;
	  defaultHeight = options.youtubeHeight ? options.youtubeHeight : 315;
  
	  if (rest) {
		width = (d = /width="(.+?)"/.exec(rest)) ? d[1] : defaultWidth;
		height = (d = /height="(.+?)"/.exec(rest)) ? d[1] : defaultHeight;
	  }
	  if (/^\d+$/gm.exec(width)) {
		width += 'px';
	  }
	  if (/^\d+$/gm.exec(height)) {
		height += 'px';
	  }
  
	  return {
		width: width,
		height: height
	  };
	}
	showdown.extension('youtube', function () {
	  return [
		{
		  type: 'output',
		  filter: function (text, converter, options) {
			return text.replace(imgRegex, function (match, url, alt, rest) {
				if (alt == "youtube")
				{
					var d = parseDimensions(rest, options);
					var fUrl = 'https://www.youtube.com/embed/' + url;
					return iframe.replace(/%1/g, fUrl).replace('%2', d.width).replace('%3', d.height);
				}
				else
				{
					return match;
				}
			});
		  }
		}
	  ];
	});
  }));
  
  //# sourceMappingURL=showdown-youtube.js.map